//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Shipment49Web.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MorringOfficeEntities : DbContext
    {
        public MorringOfficeEntities()
            : base("name=MorringOfficeEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<AssignLooseEquipToWinch> AssignLooseEquipToWinches { get; set; }
        public virtual DbSet<AssignRopeToWinch> AssignRopeToWinches { get; set; }
        public virtual DbSet<Certicationcomment> Certicationcomments { get; set; }
        public virtual DbSet<Certication> Certications { get; set; }
        public virtual DbSet<CertificateList> CertificateLists { get; set; }
        public virtual DbSet<ChainStopper> ChainStoppers { get; set; }
        public virtual DbSet<Comment> Comments { get; set; }
        public virtual DbSet<CompanyInfo> CompanyInfoes { get; set; }
        public virtual DbSet<CrewDetail> CrewDetails { get; set; }
        public virtual DbSet<CrewReport> CrewReports { get; set; }
        public virtual DbSet<DamageObserved> DamageObserveds { get; set; }
        public virtual DbSet<DocsPage> DocsPages { get; set; }
        public virtual DbSet<Document> Documents { get; set; }
        public virtual DbSet<ImportLog> ImportLogs { get; set; }
        public virtual DbSet<JoiningShackle> JoiningShackles { get; set; }
        public virtual DbSet<login> logins { get; set; }
        public virtual DbSet<LooseEDamageRecord> LooseEDamageRecords { get; set; }
        public virtual DbSet<LooseEDisposal> LooseEDisposals { get; set; }
        public virtual DbSet<LooseEType> LooseETypes { get; set; }
        public virtual DbSet<Membership> Memberships { get; set; }
        public virtual DbSet<Message> Messages { get; set; }
        public virtual DbSet<MooringLooseEquipInspection> MooringLooseEquipInspections { get; set; }
        public virtual DbSet<MooringRopeDetail> MooringRopeDetails { get; set; }
        public virtual DbSet<MooringRopeInspection> MooringRopeInspections { get; set; }
        public virtual DbSet<MooringRopeType> MooringRopeTypes { get; set; }
        public virtual DbSet<MooringWinchDetail> MooringWinchDetails { get; set; }
        public virtual DbSet<MOperationBirthDetail> MOperationBirthDetails { get; set; }
        public virtual DbSet<MOUsedWinchTbl> MOUsedWinchTbls { get; set; }
        public virtual DbSet<NotificationComment> NotificationComments { get; set; }
        public virtual DbSet<Notification> Notifications { get; set; }
        public virtual DbSet<ResidualLabTest> ResidualLabTests { get; set; }
        public virtual DbSet<Revision> Revisions { get; set; }
        public virtual DbSet<RopeCropping> RopeCroppings { get; set; }
        public virtual DbSet<RopeDamageRecord> RopeDamageRecords { get; set; }
        public virtual DbSet<RopeDisposal> RopeDisposals { get; set; }
        public virtual DbSet<RopeEndtoEnd2> RopeEndtoEnd2 { get; set; }
        public virtual DbSet<RopeSplicingRecord> RopeSplicingRecords { get; set; }
        public virtual DbSet<RopeTail> RopeTails { get; set; }
        public virtual DbSet<tblCommon> tblCommons { get; set; }
        public virtual DbSet<tblFleetName> tblFleetNames { get; set; }
        public virtual DbSet<tblFleetType> tblFleetTypes { get; set; }
        public virtual DbSet<tblLooseEquipInspectionSetting> tblLooseEquipInspectionSettings { get; set; }
        public virtual DbSet<tblMasterRevision> tblMasterRevisions { get; set; }
        public virtual DbSet<TblMenu> TblMenus { get; set; }
        public virtual DbSet<tblNotification> tblNotifications { get; set; }
        public virtual DbSet<tblRopeInspectionSetting> tblRopeInspectionSettings { get; set; }
        public virtual DbSet<tblRopeTailInspectionSetting> tblRopeTailInspectionSettings { get; set; }
        public virtual DbSet<tblShipSpecificAttachment> tblShipSpecificAttachments { get; set; }
        public virtual DbSet<tblShipSpecificContent> tblShipSpecificContents { get; set; }
        public virtual DbSet<tblSmartMenu> tblSmartMenus { get; set; }
        public virtual DbSet<TblSubMenu> TblSubMenus { get; set; }
        public virtual DbSet<TblSubSubMenu> TblSubSubMenus { get; set; }
        public virtual DbSet<tempDocsPage> tempDocsPages { get; set; }
        public virtual DbSet<TextEditor> TextEditors { get; set; }
        public virtual DbSet<UserDetail> UserDetails { get; set; }
        public virtual DbSet<VesselDetail> VesselDetails { get; set; }
        public virtual DbSet<PortList> PortLists { get; set; }
        public virtual DbSet<View_AnalysysExpenseVsDuration> View_AnalysysExpenseVsDuration { get; set; }
        public virtual DbSet<View_AverageRunningRopeHours> View_AverageRunningRopeHours { get; set; }
        public virtual DbSet<View_ManufacturerPerformanceComparison> View_ManufacturerPerformanceComparison { get; set; }
        public virtual DbSet<View_MooringRopeDetails> View_MooringRopeDetails { get; set; }
        public virtual DbSet<View_MooringRopeInspectionDetails> View_MooringRopeInspectionDetails { get; set; }
        public virtual DbSet<View_Notifications> View_Notifications { get; set; }
        public virtual DbSet<View_OperationRecords> View_OperationRecords { get; set; }
        public virtual DbSet<View_OperationWiseRopes> View_OperationWiseRopes { get; set; }
        public virtual DbSet<View_PredictionExpectency> View_PredictionExpectency { get; set; }
        public virtual DbSet<View_ReportAssignRopeToWinch> View_ReportAssignRopeToWinch { get; set; }
        public virtual DbSet<View_ReportInspectionStatus> View_ReportInspectionStatus { get; set; }
        public virtual DbSet<View_ReportInspectionStatusDetails> View_ReportInspectionStatusDetails { get; set; }
        public virtual DbSet<View_ReportLooseEquipmentInspection> View_ReportLooseEquipmentInspection { get; set; }
        public virtual DbSet<View_RopeDamages> View_RopeDamages { get; set; }
        public virtual DbSet<View_RopeManufacturer> View_RopeManufacturer { get; set; }
        public virtual DbSet<View_RopesDiscardedMonthsHours> View_RopesDiscardedMonthsHours { get; set; }
        public virtual DbSet<View_RopesOverdueInspection> View_RopesOverdueInspection { get; set; }
        public virtual DbSet<View_RopesPendingInspection> View_RopesPendingInspection { get; set; }
        public virtual DbSet<View_SatisfactoryRopes> View_SatisfactoryRopes { get; set; }
        public virtual DbSet<View_SatisfactoryRopes_Details> View_SatisfactoryRopes_Details { get; set; }
        public virtual DbSet<View_TotalRopes> View_TotalRopes { get; set; }
        public virtual DbSet<View_VesselWiseExpenseAnalysis> View_VesselWiseExpenseAnalysis { get; set; }
        public virtual DbSet<vRopesCropped> vRopesCroppeds { get; set; }
        public virtual DbSet<vRopesDamaged> vRopesDamageds { get; set; }
        public virtual DbSet<vRopesDetail> vRopesDetails { get; set; }
        public virtual DbSet<vRopesDisposed> vRopesDisposeds { get; set; }
        public virtual DbSet<vRopesEndToEnd> vRopesEndToEnds { get; set; }
        public virtual DbSet<vRopesSpliced> vRopesSpliceds { get; set; }
    
        public virtual ObjectResult<GetRopeEndtoEnd_Result> GetRopeEndtoEnd(string action, Nullable<int> id)
        {
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRopeEndtoEnd_Result>("GetRopeEndtoEnd", actionParameter, idParameter);
        }
    
        public virtual ObjectResult<GetSatisfactoryRopes_Result> GetSatisfactoryRopes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSatisfactoryRopes_Result>("GetSatisfactoryRopes");
        }
    
        public virtual ObjectResult<MooringDamageRecord_Result> MooringDamageRecord(Nullable<int> mOpid)
        {
            var mOpidParameter = mOpid.HasValue ?
                new ObjectParameter("MOpid", mOpid) :
                new ObjectParameter("MOpid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MooringDamageRecord_Result>("MooringDamageRecord", mOpidParameter);
        }
    
        public virtual int spAddCompany(string companyName, string est_Year, string employees, string contactNo, string faxNo, string emailID, string webSite, string address)
        {
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var est_YearParameter = est_Year != null ?
                new ObjectParameter("Est_Year", est_Year) :
                new ObjectParameter("Est_Year", typeof(string));
    
            var employeesParameter = employees != null ?
                new ObjectParameter("Employees", employees) :
                new ObjectParameter("Employees", typeof(string));
    
            var contactNoParameter = contactNo != null ?
                new ObjectParameter("ContactNo", contactNo) :
                new ObjectParameter("ContactNo", typeof(string));
    
            var faxNoParameter = faxNo != null ?
                new ObjectParameter("FaxNo", faxNo) :
                new ObjectParameter("FaxNo", typeof(string));
    
            var emailIDParameter = emailID != null ?
                new ObjectParameter("EmailID", emailID) :
                new ObjectParameter("EmailID", typeof(string));
    
            var webSiteParameter = webSite != null ?
                new ObjectParameter("WebSite", webSite) :
                new ObjectParameter("WebSite", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAddCompany", companyNameParameter, est_YearParameter, employeesParameter, contactNoParameter, faxNoParameter, emailIDParameter, webSiteParameter, addressParameter);
        }
    
        public virtual ObjectResult<spAssignRopeToWinch_Result> spAssignRopeToWinch(Nullable<int> id, Nullable<int> ropeTail)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var ropeTailParameter = ropeTail.HasValue ?
                new ObjectParameter("RopeTail", ropeTail) :
                new ObjectParameter("RopeTail", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spAssignRopeToWinch_Result>("spAssignRopeToWinch", idParameter, ropeTailParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spCheckContent(Nullable<int> rowsPerPage, Nullable<int> pageNumber)
        {
            var rowsPerPageParameter = rowsPerPage.HasValue ?
                new ObjectParameter("RowsPerPage", rowsPerPage) :
                new ObjectParameter("RowsPerPage", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spCheckContent", rowsPerPageParameter, pageNumberParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spCheckContent_PageWise(Nullable<int> rowsPerPage, Nullable<int> pageNumber, Nullable<int> id)
        {
            var rowsPerPageParameter = rowsPerPage.HasValue ?
                new ObjectParameter("RowsPerPage", rowsPerPage) :
                new ObjectParameter("RowsPerPage", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spCheckContent_PageWise", rowsPerPageParameter, pageNumberParameter, idParameter);
        }
    
        public virtual ObjectResult<spCompanyDetail_Result> spCompanyDetail()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCompanyDetail_Result>("spCompanyDetail");
        }
    
        public virtual ObjectResult<spDamageRope_Result> spDamageRope(Nullable<int> ropeTail, Nullable<int> id)
        {
            var ropeTailParameter = ropeTail.HasValue ?
                new ObjectParameter("RopeTail", ropeTail) :
                new ObjectParameter("RopeTail", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDamageRope_Result>("spDamageRope", ropeTailParameter, idParameter);
        }
    
        public virtual int spdeleteCrewDetailb(Nullable<long> vessel_ID)
        {
            var vessel_IDParameter = vessel_ID.HasValue ?
                new ObjectParameter("Vessel_ID", vessel_ID) :
                new ObjectParameter("Vessel_ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spdeleteCrewDetailb", vessel_IDParameter);
        }
    
        public virtual int spDeleteuser(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDeleteuser", userIdParameter);
        }
    
        public virtual int spDeleteWorkHours(Nullable<long> vessel_ID)
        {
            var vessel_IDParameter = vessel_ID.HasValue ?
                new ObjectParameter("Vessel_ID", vessel_ID) :
                new ObjectParameter("Vessel_ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDeleteWorkHours", vessel_IDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spDynamicMenus(Nullable<int> rowsPerPage, Nullable<int> pageNumber, string action)
        {
            var rowsPerPageParameter = rowsPerPage.HasValue ?
                new ObjectParameter("RowsPerPage", rowsPerPage) :
                new ObjectParameter("RowsPerPage", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spDynamicMenus", rowsPerPageParameter, pageNumberParameter, actionParameter);
        }
    
        public virtual ObjectResult<spInspectionDetail_Result> spInspectionDetail(Nullable<int> vesselID, Nullable<int> ropeTail, Nullable<int> ropeId)
        {
            var vesselIDParameter = vesselID.HasValue ?
                new ObjectParameter("VesselID", vesselID) :
                new ObjectParameter("VesselID", typeof(int));
    
            var ropeTailParameter = ropeTail.HasValue ?
                new ObjectParameter("RopeTail", ropeTail) :
                new ObjectParameter("RopeTail", typeof(int));
    
            var ropeIdParameter = ropeId.HasValue ?
                new ObjectParameter("RopeId", ropeId) :
                new ObjectParameter("RopeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spInspectionDetail_Result>("spInspectionDetail", vesselIDParameter, ropeTailParameter, ropeIdParameter);
        }
    
        public virtual ObjectResult<spMasterRevisionDetails_Result> spMasterRevisionDetails(string action, string revInclude)
        {
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var revIncludeParameter = revInclude != null ?
                new ObjectParameter("RevInclude", revInclude) :
                new ObjectParameter("RevInclude", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spMasterRevisionDetails_Result>("spMasterRevisionDetails", actionParameter, revIncludeParameter);
        }
    
        public virtual ObjectResult<spMooringRopeDetailList_Result> spMooringRopeDetailList(Nullable<int> ropeTail, Nullable<int> ropeId)
        {
            var ropeTailParameter = ropeTail.HasValue ?
                new ObjectParameter("RopeTail", ropeTail) :
                new ObjectParameter("RopeTail", typeof(int));
    
            var ropeIdParameter = ropeId.HasValue ?
                new ObjectParameter("RopeId", ropeId) :
                new ObjectParameter("RopeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spMooringRopeDetailList_Result>("spMooringRopeDetailList", ropeTailParameter, ropeIdParameter);
        }
    
        public virtual ObjectResult<spReport_AnalysysExpenseVsDuration_Result> spReport_AnalysysExpenseVsDuration()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spReport_AnalysysExpenseVsDuration_Result>("spReport_AnalysysExpenseVsDuration");
        }
    
        public virtual ObjectResult<spReport_AverageRunningRopeHours_Result> spReport_AverageRunningRopeHours()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spReport_AverageRunningRopeHours_Result>("spReport_AverageRunningRopeHours");
        }
    
        public virtual ObjectResult<spReport_ManufacturerPerformanceComparison_Result> spReport_ManufacturerPerformanceComparison()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spReport_ManufacturerPerformanceComparison_Result>("spReport_ManufacturerPerformanceComparison");
        }
    
        public virtual ObjectResult<spReport_PredictionExpectency_Result> spReport_PredictionExpectency()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spReport_PredictionExpectency_Result>("spReport_PredictionExpectency");
        }
    
        public virtual ObjectResult<spReport_VesselWiseExpenseAnalysis_Result> spReport_VesselWiseExpenseAnalysis()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spReport_VesselWiseExpenseAnalysis_Result>("spReport_VesselWiseExpenseAnalysis");
        }
    
        public virtual int spRopeAnalysis()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spRopeAnalysis");
        }
    
        public virtual ObjectResult<spRopeCropping_Result> spRopeCropping(Nullable<int> ropeTail, Nullable<int> id)
        {
            var ropeTailParameter = ropeTail.HasValue ?
                new ObjectParameter("RopeTail", ropeTail) :
                new ObjectParameter("RopeTail", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spRopeCropping_Result>("spRopeCropping", ropeTailParameter, idParameter);
        }
    
        public virtual ObjectResult<spRopeDiscardList_Result> spRopeDiscardList(Nullable<int> ropeTail, Nullable<int> id)
        {
            var ropeTailParameter = ropeTail.HasValue ?
                new ObjectParameter("RopeTail", ropeTail) :
                new ObjectParameter("RopeTail", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spRopeDiscardList_Result>("spRopeDiscardList", ropeTailParameter, idParameter);
        }
    
        public virtual ObjectResult<spRopeInspectionPercentage_Result> spRopeInspectionPercentage()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spRopeInspectionPercentage_Result>("spRopeInspectionPercentage");
        }
    
        public virtual ObjectResult<spRopesDiscarded_Result> spRopesDiscarded()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spRopesDiscarded_Result>("spRopesDiscarded");
        }
    
        public virtual ObjectResult<spRopeSplicing_Result> spRopeSplicing(Nullable<int> ropeTail, Nullable<int> id)
        {
            var ropeTailParameter = ropeTail.HasValue ?
                new ObjectParameter("RopeTail", ropeTail) :
                new ObjectParameter("RopeTail", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spRopeSplicing_Result>("spRopeSplicing", ropeTailParameter, idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spRopesRequiringDiscard()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spRopesRequiringDiscard");
        }
    
        public virtual ObjectResult<spSatisfactoryRopes_Result> spSatisfactoryRopes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSatisfactoryRopes_Result>("spSatisfactoryRopes");
        }
    
        public virtual ObjectResult<spShipSpecAttachment_Result> spShipSpecAttachment(Nullable<int> menuID)
        {
            var menuIDParameter = menuID.HasValue ?
                new ObjectParameter("menuID", menuID) :
                new ObjectParameter("menuID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spShipSpecAttachment_Result>("spShipSpecAttachment", menuIDParameter);
        }
    
        public virtual ObjectResult<spShipSpecificAttachment_Result> spShipSpecificAttachment(Nullable<int> shipID, Nullable<int> menuID)
        {
            var shipIDParameter = shipID.HasValue ?
                new ObjectParameter("shipID", shipID) :
                new ObjectParameter("shipID", typeof(int));
    
            var menuIDParameter = menuID.HasValue ?
                new ObjectParameter("menuID", menuID) :
                new ObjectParameter("menuID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spShipSpecificAttachment_Result>("spShipSpecificAttachment", shipIDParameter, menuIDParameter);
        }
    
        public virtual int spUpdateCompany(Nullable<int> companyID, string companyName, string establishYear, string totalEmployee, string contectNo, string faxNo, string emailID, string webSite, string address)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var establishYearParameter = establishYear != null ?
                new ObjectParameter("EstablishYear", establishYear) :
                new ObjectParameter("EstablishYear", typeof(string));
    
            var totalEmployeeParameter = totalEmployee != null ?
                new ObjectParameter("TotalEmployee", totalEmployee) :
                new ObjectParameter("TotalEmployee", typeof(string));
    
            var contectNoParameter = contectNo != null ?
                new ObjectParameter("contectNo", contectNo) :
                new ObjectParameter("contectNo", typeof(string));
    
            var faxNoParameter = faxNo != null ?
                new ObjectParameter("FaxNo", faxNo) :
                new ObjectParameter("FaxNo", typeof(string));
    
            var emailIDParameter = emailID != null ?
                new ObjectParameter("EmailID", emailID) :
                new ObjectParameter("EmailID", typeof(string));
    
            var webSiteParameter = webSite != null ?
                new ObjectParameter("WebSite", webSite) :
                new ObjectParameter("WebSite", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateCompany", companyIDParameter, companyNameParameter, establishYearParameter, totalEmployeeParameter, contectNoParameter, faxNoParameter, emailIDParameter, webSiteParameter, addressParameter);
        }
    
        public virtual int spUpdatepassword(Nullable<int> userId, string password)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdatepassword", userIdParameter, passwordParameter);
        }
    
        public virtual ObjectResult<spView_AbrasionZoneA_Result> spView_AbrasionZoneA()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spView_AbrasionZoneA_Result>("spView_AbrasionZoneA");
        }
    
        public virtual ObjectResult<spView_AbrasionZoneB_Result> spView_AbrasionZoneB()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spView_AbrasionZoneB_Result>("spView_AbrasionZoneB");
        }
    
        public virtual int spWorkHours(Nullable<long> vessel_ID, string userName)
        {
            var vessel_IDParameter = vessel_ID.HasValue ?
                new ObjectParameter("Vessel_ID", vessel_ID) :
                new ObjectParameter("Vessel_ID", typeof(long));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spWorkHours", vessel_IDParameter, userNameParameter);
        }
    
        public virtual int spWorkHourslUpdate(Nullable<long> wID, string supridentComment, Nullable<System.DateTime> comment_Date, string commentBy)
        {
            var wIDParameter = wID.HasValue ?
                new ObjectParameter("WID", wID) :
                new ObjectParameter("WID", typeof(long));
    
            var supridentCommentParameter = supridentComment != null ?
                new ObjectParameter("SupridentComment", supridentComment) :
                new ObjectParameter("SupridentComment", typeof(string));
    
            var comment_DateParameter = comment_Date.HasValue ?
                new ObjectParameter("Comment_Date", comment_Date) :
                new ObjectParameter("Comment_Date", typeof(System.DateTime));
    
            var commentByParameter = commentBy != null ?
                new ObjectParameter("CommentBy", commentBy) :
                new ObjectParameter("CommentBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spWorkHourslUpdate", wIDParameter, supridentCommentParameter, comment_DateParameter, commentByParameter);
        }
    
        public virtual int Update_AssignRopeToWinch()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_AssignRopeToWinch");
        }
    
        public virtual int Update_ChainStopper()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_ChainStopper");
        }
    
        public virtual int Update_DamageObserved()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_DamageObserved");
        }
    
        public virtual int Update_JoiningShackle()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_JoiningShackle");
        }
    
        public virtual int Update_LooseEDamageRecord()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_LooseEDamageRecord");
        }
    
        public virtual int Update_LooseEDisposal()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_LooseEDisposal");
        }
    
        public virtual int Update_LooseEType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_LooseEType");
        }
    
        public virtual int Update_MooringLooseEquipInspection()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_MooringLooseEquipInspection");
        }
    
        public virtual int Update_MooringRopeDetail()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_MooringRopeDetail");
        }
    
        public virtual int Update_MooringRopeInspection()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_MooringRopeInspection");
        }
    
        public virtual int Update_MooringRopeType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_MooringRopeType");
        }
    
        public virtual int Update_MooringWinchDetail()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_MooringWinchDetail");
        }
    
        public virtual int Update_MOperationBirthDetail()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_MOperationBirthDetail");
        }
    
        public virtual int Update_MOUsedWinchTbl()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_MOUsedWinchTbl");
        }
    
        public virtual int Update_NotificationComment()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_NotificationComment");
        }
    
        public virtual int Update_Notifications()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Notifications");
        }
    
        public virtual int Update_ResidualLabTest()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_ResidualLabTest");
        }
    
        public virtual int Update_RopeCropping()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_RopeCropping");
        }
    
        public virtual int Update_RopeDamageRecord()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_RopeDamageRecord");
        }
    
        public virtual int Update_RopeDisposal()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_RopeDisposal");
        }
    
        public virtual int Update_RopeEndToEnd2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_RopeEndToEnd2");
        }
    
        public virtual int Update_RopeSplicingRecord()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_RopeSplicingRecord");
        }
    
        public virtual int Update_RopeTail()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_RopeTail");
        }
    }
}

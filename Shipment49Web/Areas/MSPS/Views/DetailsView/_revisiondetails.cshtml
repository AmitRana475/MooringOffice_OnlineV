@*@model Shipment49Web.Areas.MSPS.Models.ApproveIndex*@

@model List<Reports.Revision>
@using System.Text.RegularExpressions;

<div id="dvListing5" class="table-responsive table-striped">
    <table class="table no-margin" id="dataTable" width="100%" cellspacing="0">
        <thead>
            <tr>
                <th>Revision Number</th>
                <th>Revision Date</th>
                <th>Section</th>
                <th>Created By</th>
                <th>Status</th>
                <th>Approval Date</th>
                <th>Content</th>
            </tr>
        </thead>
        <tbody>
            @{
                string correctContent = "";
            }
            @foreach (var m in Model)
            {
                correctContent = Regex.Replace(@m.Content, "<.*?>", String.Empty);
                <tr>
                    <td>
                        @{
                            if (string.IsNullOrEmpty(m.RPrefix))
                            {
                                @Html.Raw(string.Format("{0}{1}", m.RPrefix, m.RNumber));
                            }
                            else
                            {
                                @Html.Raw(string.Format("{0}{1}", m.RPrefix.EndsWith("/") ? m.RPrefix : m.RPrefix + "/", m.RNumber));
                            }
                        }
                    </td>
                    <td>
                        @if (m.ReviseDate.HasValue)
                        {
                            @m.ReviseDate.Value.ToString("dd-MM-yyyy");
                        }
                    </td>
                    <td>@m.ContentPath</td>
                    <td>@m.CreateBy</td>
                    <td>@m.Status</td>
                    <td>
                        @if (m.ApproveDate.HasValue)
                        {
                            @m.ApproveDate.Value.ToString("dd-MM-yyyy");
                        }
                    </td>
                    <td>
                        <a target="_blank" href="@Url.Action("CheckContent","Approve",new {id=m.Id })">
                            Details
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
<div class="text-center">
    <ul class="pagination">
        @{
            int totalRecords = Convert.ToInt32(TempData.Peek("TotalRecords"));

            int tot_pages = totalRecords / Shipment49Web.Common.CommonMethods.PAGESIZE;
            int remainder = totalRecords % Shipment49Web.Common.CommonMethods.PAGESIZE;

            tot_pages = remainder > 0 ? (tot_pages + 1) : tot_pages;

            int currPage = Convert.ToInt32(TempData.Peek("CurrentPage"));

            for (int cnt = 1; cnt <= tot_pages; cnt++)
            {
                if (cnt == currPage)
                {
                    <li class="active"><a href="#">@cnt</a></li>
                }
                else
                {
                    <li>
                        @*@Html.ActionLink(cnt.ToString(), "vesselwise", "analysis", new { id = cnt }, null)*@

                        <a onclick="return searchindex1(@cnt)">@cnt.ToString()</a>
                    </li>
                }

            }
        }
    </ul>
</div>


@*<div class="table-responsive" id="dvListing5">
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Revision Number</th>
                <th>Revision Date</th>
                <th>Section</th>
                <th>Created By</th>
                <th>Status</th>
                <th>Approval Date</th>
                <th>Content</th>
            </tr>
        </thead>
        <tbody>
            @{Int32 count = 0; string correctContent = "";}

            @foreach (var m in Model.contentListing)
            {
                correctContent = Regex.Replace(@m.Content, "<.*?>", String.Empty);
                <tr>
                    <td>
                        @string.Format("{0}{1}", m.RPrefix, m.RNumber)
                    </td>
                    <td>
                        @if (m.ReviseDate.HasValue)
                        {
                            @m.ReviseDate.Value.ToString("dd-MM-yyyy");
                        }
                    </td>
                    <td>@m.ContentPath</td>
                    <td>@m.CreateBy</td>
                    <td>@m.Status</td>
                    <td>
                        @if (m.ApproveDate.HasValue)
                        {
                            @m.ApproveDate.Value.ToString("dd-MM-yyyy");
                        }
                    </td>
                    <td>
                        <a target="_blank" href="@Url.Action("CheckContent","Approve",new {id=m.Id })">
                            Details
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    @if (Model.contentListing.Count() > 0)
    {
        if (Model.Pager.EndPage > 1)
        {
            <ul class="pagination">
                @if (Model.Pager.CurrentPage > 1)
                {
                    <li>
                        <a onclick="return searchData(1)">First</a>
                    </li>
                    <li>
                        <a onclick="return searchData(@(Model.Pager.CurrentPage - 1))">Previous</a>
                    </li>
                }

                @for (var page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
                {
                    <li class="@(page == Model.Pager.CurrentPage ? "active" : "")">
                        <a onclick="return searchData(@page)">@page</a>
                    </li>
                }

                @if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
                {
                    <li>
                        <a onclick="return searchData(@(Model.Pager.CurrentPage + 1))">Next</a>
                    </li>
                    <li>
                        <a onclick="return searchData(@(Model.Pager.TotalPages))">Last</a>
                    </li>
                }
            </ul>
        }
    }*@

@model VesselLayer.Vessel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LeftSideBar.cshtml";
}


<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
@*<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>*@

@*<script>
    $(function () {
        $('.dtpicker').datepicker({
            autoclose: true
        })
    });
</script>*@


<script>
    $(function () {
        $('.dtpicker').datepicker({
            dateFormat: 'dd-M-yy',
            changeMonth: true,
            changeYear: true,
            autoclose: true,
            maxDate: "+0D"
        })
    });
</script>


<div class="content-wrapper">
    <section class="content-header">
        <h1>
            Vessels
        </h1>
        <p class="pull-right">
            @Html.ActionLink("Back to List", "Index")
        </p>
    </section>
    <section class="content">
        <div class="row">
            <div class="col-md-12">
                <div class="box box-info">

                    <div class="box-body">
                        <div class="row">
                            @using (Html.BeginForm("Create", "VesselInfo"))
                            {
                                @Html.AntiForgeryToken()
                                @Html.HiddenFor(e => e.Id)

                                <div class="form-horizontal">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.VesselName, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-3">
                                            @Html.EditorFor(model => model.VesselName, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.VesselName, "", new { @class = "text-danger" })
                                        </div>
                                        @Html.LabelFor(model => model.ImoNo, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-3">
                                            @Html.EditorFor(model => model.ImoNo, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.ImoNo, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Flag, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-3">
                                            @Html.EditorFor(model => model.Flag, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Flag, "", new { @class = "text-danger" })
                                        </div>
                                        @Html.LabelFor(model => model.DateBuilt, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-3">
                                        @*@Html.TextBoxFor(model => model.DateBuilt, new { @class = "form-control dtpicker" })*@
                                        @Html.TextBoxFor(model => model.DateBuilt, "{0:dd-MMM-yyyy}", new { @class = "form-control dtpicker"})
                                        @Html.ValidationMessageFor(model => model.DateBuilt, "", new { @class = "text-danger" })
                                    </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.FleetName, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-3">
                                            @if (ViewBag.FleetNames != null)
                                            {
                                                @Html.DropDownListFor(model => model.FleetNameID, new SelectList(ViewBag.FleetNames, "Id", "Name"), htmlAttributes: new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.FleetNameID, "", new { @class = "text-danger" })
                                            }
                                        </div>
                                        @Html.LabelFor(model => model.FleetType, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-3">
                                            @if (ViewBag.FleetTypes != null)
                                            {
                                                @Html.DropDownListFor(model => model.FleetTypeID, new SelectList(ViewBag.FleetTypes, "Id", "Name"), htmlAttributes: new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.FleetTypeID, "", new { @class = "text-danger" })
                                            }
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.MinimumRopes, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-3">
                                            @Html.EditorFor(model => model.MinimumRopes, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.MinimumRopes, "", new { @class = "text-danger" })
                                        </div>
                                        @Html.LabelFor(model => model.MinimumRopeTails, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-3">
                                            @Html.EditorFor(model => model.MinimumRopeTails, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.MinimumRopeTails, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.TradeAreaID, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-3">
                                            @if (ViewBag.TradePlatforms != null)
                                            {
                                                @Html.DropDownListFor(model => model.TradeAreaID, new SelectList(ViewBag.TradePlatforms, "Id", "Name"), htmlAttributes: new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.TradeAreaID, "", new { @class = "text-danger" })
                                            }
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="col-md-offset-2 col-md-6">
                                            <input type="submit" value="Save" class="btn btn-primary" />
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}
